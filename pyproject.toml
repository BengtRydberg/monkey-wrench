[project]
name = "monkey-wrench"
version = "0.1"
description = "Tools for CHIMP"
authors = [
    { name = "Pouria Khalaj", email = "pouria.khalaj@smhi.se" },
    { name = "Simon Pfreundschuh", email = "s.pfreundschuh@gmail.com" },
    { name = "Bengt Rydberg", email = "bengt.rydberg@smhi.se" },
    { name = "Martin Raspaud", email = "martin.raspaud@smhi.se" },
    { name = "Adam Dybbroe", email = "Adam.Dybbroe@smhi.se" }
]
readme = "README.rst"
requires-python = ">= 3.12"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering"
]
dependencies = [
    "aiohttp",
    "eumdac",
    "fsspec",
    "loguru",
    "numpy",
    "pydantic",
    "pyresample",
    "requests",
    "satpy"
]

[project.optional-dependencies]
chimp = ["chimp@git+https://github.com/simonpf/chimp", "torch", "xarray"]
doc = ["sphinx", "sphinx_rtd_theme"]
hooks = ["pre-commit", "ruff"]
tests = ["pytest", "pytest-cov"]
dev = ["monkey-wrench[chimp,doc,hooks,tests]"]

[project.scripts]
monkey-wrench = "monkey_wrench.cli:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Hatch
[tool.hatch.metadata]
allow-direct-references = true

[tool.setuptools.packages.find]
where = ["src"]

# Ruff
[tool.ruff]
line-length = 120
exclude = ["README.md"]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["A", "B", "D", "E", "W", "F", "I", "N", "PT", "S", "TID", "C90", "Q", "T10", "T20"]

[tool.ruff.lint.per-file-ignores]
#   A001: a variable is shadowing a Python builtin
#   D100: missing docstrings in public module
#   D101: missing docstrings in public class
#   D102: missing docstrings in public method
#   D103: missing docstrings in public function
#   D104: missing docstrings in public packages
#   S101: use of assert is detected
#   T201: use of print is detected
# TID252: relative imports are not prefered
# We supress the aformentioned Ruff rules on a per-file basis as follows:
"__init__.py" = ["D104"]                                        # public packages
"src/**/models/*" = ["D100", "D101", "D102", "D103", "S101"]    # pydantic models
"src/tests/*" = ["D100", "D103", "S101", "TID252"]              # all tests
"docs/source/conf.py" = ["D100", "A001"]                        # sphinx [otherwise it misbehaves]
"examples/*" = ["D100", "D103", "S101", "TID252", "T201"]       # all examples

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10
